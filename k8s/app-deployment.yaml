# app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hire4j-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hire4j-app
  template:
    metadata:
      labels:
        app: hire4j-app
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path:   '/actuator/prometheus' # The path for metrics
        prometheus.io/port:   '8080'  
    spec:
      containers:
      - name: hire4j-app-container
        image: dganev9/hire4j-app:v1 # Your application image built in Minikube's Docker
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql:3306/hire4j_dev?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true"
        - name: SPRING_DATASOURCE_USERNAME
          value: "root"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-root-password
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness # Assumes Actuator is configured
            port: 8080
          initialDelaySeconds: 90 # Increased initial delay
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness # Assumes Actuator is configured
            port: 8080
          initialDelaySeconds: 45 # Increased initial delay
          periodSeconds: 10
          timeoutSeconds: 5
